-- Create knowledge_seeds table
CREATE TABLE public.knowledge_seeds (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  type TEXT NOT NULL, -- 'seed', 'tag', 'kit', 'prompt'
  content JSONB NOT NULL,
  status TEXT DEFAULT 'germinating' NOT NULL,
  created_by uuid REFERENCES public.users(id),
  provenance JSONB,
  truth_hash TEXT,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);
COMMENT ON TABLE public.knowledge_seeds IS 'Stores knowledge seeds generated by Aura.';

-- Create seed_distribution_log table
CREATE TABLE public.seed_distribution_log (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  seed_id uuid NOT NULL REFERENCES public.knowledge_seeds(id) ON DELETE CASCADE,
  recipient_id TEXT NOT NULL, -- Can be a user_id, mesh_node_id, or external system id
  distribution_channel TEXT NOT NULL, -- 'user', 'mesh', 'external'
  status TEXT DEFAULT 'sent' NOT NULL,
  consent_given BOOLEAN DEFAULT false NOT NULL,
  created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);
COMMENT ON TABLE public.seed_distribution_log IS 'Logs the distribution of knowledge seeds.';

-- Create seed_adoption_metrics table
CREATE TABLE public.seed_adoption_metrics (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  seed_id uuid NOT NULL REFERENCES public.knowledge_seeds(id) ON DELETE CASCADE,
  adoption_count INTEGER DEFAULT 0 NOT NULL,
  resonance_score DECIMAL(3, 2) DEFAULT 0.50 NOT NULL,
  last_updated TIMESTAMPTZ DEFAULT now() NOT NULL,
  UNIQUE (seed_id)
);
COMMENT ON TABLE public.seed_adoption_metrics IS 'Tracks the adoption and resonance of knowledge seeds.';

-- Add RLS
ALTER TABLE public.knowledge_seeds ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.seed_distribution_log ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.seed_adoption_metrics ENABLE ROW LEVEL SECURITY;

-- Policies
CREATE POLICY "seeds_admin_all" ON public.knowledge_seeds FOR ALL USING (user_has_role(auth.uid(), 'admin'));
CREATE POLICY "seeds_public_read" ON public.knowledge_seeds FOR SELECT USING (true);

CREATE POLICY "distribution_log_admin_all" ON public.seed_distribution_log FOR ALL USING (user_has_role(auth.uid(), 'admin'));

CREATE POLICY "adoption_metrics_admin_all" ON public.seed_adoption_metrics FOR ALL USING (user_has_role(auth.uid(), 'admin'));
CREATE POLICY "adoption_metrics_public_read" ON public.seed_adoption_metrics FOR SELECT USING (true);
